#+TITLE: Module 1 Questions
#+SETUPFILE: ../../template-2.org
Created on 2020-07-17/15:54
* Module 1 Questions
** Expressions
+ *Question 1*
file:../../screenshots/M1S1Q1.png

#+BEGIN_SRC racket
(sqrt (+ (sqr 3) (sqr 4)))

#+END_SRC

#+RESULTS:
: 5

: RESULTS:
: 5

 + /this is pretty much the most difficult math seen in this course/


+ *Question 2*
  + If you see #i2.718281828459045 appear in the interaction pane, it means:
    1. It's an imaginary number.
    2. Someone just sent a strange tweet.
    3. /It's a number very close to 2.718281828459045./  <-
    4. I thought you said there wouldn't be much math!


+ *Question 3*
  + Which of the following are expressions:
    1. src_racket{sqr}

    2. src_racket{(+ 2 3)}  <-

    3. src_racket{+}

    4. src_racket{(sqrt 2)}i  <-

    5. src_racket{#i1.4142135623730951}  <-

    6. src_racket{1}  <-

    7. src_racket{)}


  + /At this point in the course an expression is either a value, or of the form src_racket{(<primitive> <expression> ...)}. We will shortly add to our vocabulary of expressions./


+ *Question 4*
  + Which of the folloing are values:
    1. src_racket{sqr}

    2. src_racket{(+ 2 3)}

    3. src_racket{+}

    4. src_racket{(sqrt 2)}

    5. src_racket{#i1.4142135623730951}  <-

    6. src_racket{1}  <-

    7. src_racket{)}


+ *Question 5*
  + What would be the result of evaluating the following expression:
  + src_racket{(/ (* 2 3) (- 3 1))}
    1. 18

    2. 6

    3. 2

    4. 3  <-


+ *Question 6*
  + Recall that the average of a set of numbers is the sum of the numbers divided by how many numbers there are.

    Which of these expressions produces the average of the numbers 4, 6.2 and -12? Check ALL that are correct.
    1. src_racket{(/ 3 (+ 6.2 -12 4))}

    2. src_racket{(/ (+ -8 6.2) 3)}  <-

    3. src_racket{(/ (+ 4 6.2 -12) 3)}  <-

    4. src_racket{-0.6}  <-


+ *Question 7*
  + Why are we using Beginning Student Language in this course? Select all answers that apply.
    1. /It is simple to learn, allowing you to focus your attention on the design methods correct/ 
    2. It is commonly used in industry, so you can get a job programming in BSL
    3. /It forms the core of many other languages, which will help you transfer what you learn to other languages correct/
    4. /There are so many popular programming languages that no single language will be useful for many projects correct/


** Evaluation
+ *Question 1*
  + Consider the following expression:
  + src_racket{(* (- 4 2) 3)}
  + Select all calls to primitives.
    1. src_racket{(* (- 4 2) 3)}  <-

    2. src_racket{*}

    3. src_racket{(- 4 2)}  <-

    4. src_racket{3}

    5. src_racket{-}

    6. src_racket{4}

    7. src_racket{2}
       
  + src_racket{(* (- 4 2) 3) } and src_racket{(- 4 2)} are primitive calls because they are expressions that start with open parenthesis and the name of a primitive operation.


+ *Question 2*
  + Consider the following expression:
  + src_racket{(* (- 4 2) 3)}
  + Select all the operators.
    1. src_racket{(* (- 4 2) 3)}
    2. src_racket{(*)}  <-
    3. src_racket{(- 4 2)}
    4. src_racket{3}
    5. src_racket{-}  <-
    6. src_racket{4}
    7. src_racket{2}


+ *Question 3*
  + Consider the following expression:
  + src_racket{(* (- 4 2) 3)}
  + Select all operands.
    1. src_racket{(* (- 4 2) 3)}
    2. src_racket{(*)}
    3. src_racket{(- 4 2)}  <-
    4. src_racket{3}  <-
    5. src_racket{-}
    6. src_racket{4}  <-
    7. src_racket{2}  <-


+ *Question 4*
  + What is the next step in the following evaluation?
    1. src_racket{(/ (* 3 4) (+ (- 7 4) 3))}
    2. src_racket{(/ 12 (+ (- 7 4) 3))}
       - src_racket{(/ 12 (+ 3 3))}


+ *Question 5*
  + What is the next step in the following evaluation?
    1. src_racket{(/ (* 3 4) (+ (- 7 4) 3))}
    2. src_racket{(/ 12 (+ (- 7 4) 3))}
    3. src_racket{(/ 12 (+ 3 3))}
       - src_racket{(/ 12 6)}


+ *Question 6*
  + What is the next step in the following evaluation?
    1. src_racket{(/ (* 3 4) (+ (- 7 4) 3))}
    2. src_racket{(/ 12 (+ (- 7 4) 3))}
    3. src_racket{(/ 12 (+ 3 3))}
    4. src_racket{(/ 12 6)}
       - src_racket{2}


** Strings and Images
+ *Question 1*
 + What is the value of the expression below?
 + src_racket{(substring "hello" 1 3)}
   1. src_racket{"hello"}
   2. src_racket{"hel"}
   3. src_racket{"ell"}
   4. src_racket{"el"}  <-
   5. src_racket{"he"}


+ *Question 2*
  + Will the following produce any errors?
  + src_racket{(string-append "1" "2")}
    1. Yes
    2. /No/  <-


+ *Question 3*
  + Which primitive is required in the following expression to produce the stop sign image below?
#+BEGIN_SRC racket
(______ (text "STOP" 48 "white")
        (regular-polygon 60 8 "solid" "red"))
#+END_SRC
file:../../screenshots/M1S3Q3.png
    1. above
    2. beside
    3. overlay  <-
    4. append


+ *Question 4*
  + Which image will the following expression produce?
#+BEGIN_SRC racket
(beside (square 20 "outline" "blue")
        (above (circle 15 "solid" "red")
               (triangle 20 "solid" "green")))
#+END_SRC
    1. file:../../screenshots/M1S3Q4A1.png
    2. file:../../screenshots/M1S3Q4A2.png
    3. file:../../screenshots/M1S3Q4A3.png
    4. file:../../screenshots/M1S3Q4A4.png

+ The above will produce image 2.


+ *Question 5*
  + Assume that the image below shows an entire program file. Why does running the program produce the following error?
    file:../../screenshots/M1S3Q5.png
    1. We didn't define a function named src_racket{above} in the program.
    2. We didn't include src_racket{(require 2htdp/image)} at the beginning of the program.  <-
    3. src_racket{above} does not accept a square as an argument.


+ *Question 6*
  + We have revised the program now, why are we still getting an error?
    file:../../screenshots/M1S3Q5.png
    1. We still need to define a function named above.
    2. We need to find the collection "2htpd."
    3. We misspelled the name of the required module, so we need to replace "2htpd" with "2htdp." <--


** Constant Definitions
+ *Question 1*
 + Consider the following program:
#+BEGIN_SRC racket
(define FOO (* 2 3))
; FOO = 6
(define BAR (* FOO 2))
; BAR = 12

(* FOO BAR)
; (* FOO BAR) = (* 6 12) = 72
#+END_SRC


 + What result is produced when the program is run?
: RESULTS:
: 72


+ *Question 2*
  + Given the following program:
#+BEGIN_SRC racket
(define FOO (* 2 3))
(define BAR (* FOO 2))

(* FOO BAR)
#+END_SRC
  + What is the result of the *first* evaluation step?
    1.
        #+BEGIN_SRC racket
 (define FOO (* 2 3))
 (define BAR (* FOO 2))

 (* (* 2 3) BAR)
        #+END_SRC
    2.
        #+BEGIN_SRC racket
 (define FOO (* 2 3))
 (define BAR (* FOO 2))

 (* 6 BAR)
        #+END_SRC
    3.
        #+BEGIN_SRC racket
 (define FOO (* 2 3))
 (define BAR (* (* 2 3) 2))

 (* FOO BAR)
        #+END_SRC
    4.
       #+BEGIN_SRC racket
(define FOO 6)
(define BAR (* FOO 2))

(* FOO BAR)
       #+END_SRC

+ Answer is *#4*.

* Intro lab questions


** Problem 1
+ Use string primitives to create an expression that concatenates =prefix= and =suffix= and adds "_" between them (so you get "hello_world" when you run the program).

** Problem 2
+ Use string primitives to create an expression that adds "_" at position i (the position that is i characters from the left of the string).  Again, in this particular example, the expected result is "hello_world".

** Problem 3
+ Create an expression that counts the number of pixels in the CAT image.

** Problem 4
+ Create an expression that computes whether CAT is "tall" (height is larger than its width), "wide" (width is larger than its height), or "square" (height is the same as its width).

** Problem 5
+ Create an expression that computes whether the first character in STR is "h". In this example, the expected result is true.
